<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tournaments.Shared</name>
    </assembly>
    <members>
        <member name="T:Tournaments.Shared.Dto.GameCreateDto">
             <summary>
             Data Transfer Object (DTO) used for creating a new game.
             Contains the essential information such as the game's name and scheduled time.
             </summary>
             <remarks>
             This DTO is intended for create operations where the client submits game data.
             It includes validation attributes to enforce required fields and constraints.
            
             Key properties:
             <list type="bullet">
               <item>
                 <term><see cref="P:Tournaments.Shared.Dto.GameCreateDto.Name"/></term>
                 <description>Required; must be between 3 and 100 characters.</description>
               </item>
               <item>
                 <term><see cref="P:Tournaments.Shared.Dto.GameCreateDto.Time"/></term>
                 <description>Required; indicates when the game is planned to start.</description>
               </item>
             </list>
             </remarks>
        </member>
        <member name="P:Tournaments.Shared.Dto.GameCreateDto.Name">
            <summary>
            Gets or sets the name (title) of the game.
            This field is required and must be between 3 and 100 characters in length.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Dto.GameCreateDto.Time">
            <summary>
            Gets or sets the scheduled time of the game.
            This field is required and indicates when the game is planned to start.
            </summary>
        </member>
        <member name="T:Tournaments.Shared.Dto.GameDto">
             <remarks>
             This DTO is used primarily for transferring game information between application layers,
             facilitating serialization and deserialization in API requests and responses.
            
             Key properties:
             <list type="bullet">
               <item><term><see cref="P:Tournaments.Shared.Dto.GameDto.Title"/></term><description>The name of the game.</description></item>
               <item><term><see cref="P:Tournaments.Shared.Dto.GameDto.StartDate"/></term><description>The scheduled date and time when the game begins.</description></item>
             </list>
            
             This class promotes separation of concerns by decoupling the domain entity from data transport,
             supporting clean architecture and maintainability.
             </remarks>
        </member>
        <member name="P:Tournaments.Shared.Dto.GameDto.Title">
            <summary>
            Gets or sets the title of the game.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Dto.GameDto.StartDate">
            <summary>
            Gets or sets the scheduled start date and time of the game.
            </summary>
        </member>
        <member name="T:Tournaments.Shared.Dto.GameUpdateDto">
            <summary>
            Data Transfer Object (DTO) used for updating an existing game's title.
            </summary>
            <remarks>
            This DTO is designed to carry only the mutable property of a gameâ€”its <see cref="P:Tournaments.Shared.Dto.GameUpdateDto.Title"/>.
            It is used primarily in update operations to encapsulate client input,
            promoting separation of concerns between domain and transport layers.
            
            Validation:
            - <see cref="P:Tournaments.Shared.Dto.GameUpdateDto.Title"/> is required and must not exceed 100 characters.
            </remarks>
        </member>
        <member name="P:Tournaments.Shared.Dto.GameUpdateDto.Title">
            <summary>
            Gets or sets the title of the game.
            This field is required and has a maximum length of 100 characters.
            </summary>
        </member>
        <member name="T:Tournaments.Shared.Dto.TournamentDetailsCreateDto">
            <summary>
            Data Transfer Object (DTO) used for creating new tournament entries.
            </summary>
            <remarks>
            This DTO is intended for use in create operations where a client submits data to register a new tournament.
            
            It includes validation attributes to enforce required fields and value constraints:
            <list type="bullet">
              <item>
                <term><see cref="P:Tournaments.Shared.Dto.TournamentDetailsCreateDto.Title"/></term>
                <description>Required; maximum length of 100 characters.</description>
              </item>
              <item>
                <term><see cref="P:Tournaments.Shared.Dto.TournamentDetailsCreateDto.StartDate"/></term>
                <description>Required; represents the scheduled start date of the tournament.</description>
              </item>
            </list>
            
            The model is suitable for serialization and model binding in ASP.NET Core Web APIs,
            and aligns with clean architecture practices by decoupling domain logic from transport structures.
            </remarks>
        </member>
        <member name="P:Tournaments.Shared.Dto.TournamentDetailsCreateDto.Title">
            <summary>
            Gets or sets the title of the tournament.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Dto.TournamentDetailsCreateDto.StartDate">
            <summary>
            Gets or sets the start date of the tournament.
            </summary>
        </member>
        <member name="T:Tournaments.Shared.Dto.TournamentDto">
            <summary>
            Data Transfer Object (DTO) representing the details of a tournament, 
            including its name, start date, computed end date, and associated games.
            </summary>
            <remarks>
            This DTO is intended for read operations (e.g., API responses) and supports structured serialization 
            of tournament-related data.
            
            <para>
            The <see cref="P:Tournaments.Shared.Dto.TournamentDto.EndDate"/> property is computed automatically based on the <see cref="P:Tournaments.Shared.Dto.TournamentDto.StartDate"/>,
            extending it by 3 months. It is not meant to be manually set or persisted.
            </para>
            
            <list type="bullet">
              <item>
                <term><see cref="P:Tournaments.Shared.Dto.TournamentDto.Title"/></term>
                <description>Required. The tournament's display name (max 100 characters).</description>
              </item>
              <item>
                <term><see cref="P:Tournaments.Shared.Dto.TournamentDto.StartDate"/></term>
                <description>Required. The tournament's official start date.</description>
              </item>
              <item>
                <term><see cref="P:Tournaments.Shared.Dto.TournamentDto.EndDate"/></term>
                <description>Derived from <see cref="P:Tournaments.Shared.Dto.TournamentDto.StartDate"/>. Equals StartDate + 3 months.</description>
              </item>
              <item>
                <term><see cref="P:Tournaments.Shared.Dto.TournamentDto.Games"/></term>
                <description>Required. A list of games (of type <see cref="T:Tournaments.Shared.Dto.GameDto"/>) associated with the tournament.</description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:Tournaments.Shared.Dto.TournamentDto.Title">
            <summary>
            Gets or sets the title of the tournament.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Dto.TournamentDto.StartDate">
            <summary>
            Gets or sets the start date of the tournament.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Dto.TournamentDto.EndDate">
            <summary>
            Gets the end date of the tournament, automatically calculated as StartDate plus 3 months.
            <note>EndDate is automatically calculated as StartDate + 3 months and always stays in sync with StartDate.</note>
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Dto.TournamentDto.Games">
            <summary>
            Navigation Property.
            Gets or sets the list of games associated with the tournament.
            </summary>
        </member>
        <member name="T:Tournaments.Shared.Dto.TournamentUpdateDto">
            <summary>
            Represents a Data Transfer Object (DTO) used to update the title of an existing tournament.
            </summary>
            <remarks>
            This DTO is intended strictly for update (PUT/PATCH) operations where only mutable fields of a 
            tournament can be changed. It ensures that:
            
            <list type="bullet">
              <item>
                <term><see cref="P:Tournaments.Shared.Dto.TournamentUpdateDto.Title"/></term>
                <description>
                Must be provided and limited to a maximum of 100 characters. Used to rename a tournament.
                </description>
              </item>
            </list>
            
            Immutable fields like identifiers or associated collections (e.g., games) are intentionally excluded
            to protect domain integrity and simplify validation.
            
            Validation attributes ensure that the update request conforms to business rules before reaching 
            the application or data layer.
            </remarks>
        </member>
        <member name="P:Tournaments.Shared.Dto.TournamentUpdateDto.Title">
            <summary>
            Gets or sets the title of the tournament.
            This field is required and cannot exceed 100 characters.
            </summary>
        </member>
        <member name="T:Tournaments.Shared.Request.MetaData">
            <summary>
            Represents pagination metadata returned alongside paged API results.
            </summary>
            <param name="currentPage">The current page number in the result set.</param>
            <param name="totalPages">The total number of available pages.</param>
            <param name="pageSize">The number of items per page.</param>
            <param name="totalCount">The total number of items across all pages.</param>
        </member>
        <member name="M:Tournaments.Shared.Request.MetaData.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Represents pagination metadata returned alongside paged API results.
            </summary>
            <param name="currentPage">The current page number in the result set.</param>
            <param name="totalPages">The total number of available pages.</param>
            <param name="pageSize">The number of items per page.</param>
            <param name="totalCount">The total number of items across all pages.</param>
        </member>
        <member name="P:Tournaments.Shared.Request.MetaData.CurrentPage">
            <summary>
            Gets the current page number.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.MetaData.TotalPages">
            <summary>
            Gets the total number of pages available.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.MetaData.PageSize">
            <summary>
            Gets the number of items on each page.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.MetaData.TotalCount">
            <summary>
            Gets the total number of items across all pages.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.MetaData.HasPrevious">
            <summary>
            Indicates whether there is a previous page.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.MetaData.HasNext">
            <summary>
            Indicates whether there is a next page.
            </summary>
        </member>
        <member name="T:Tournaments.Shared.Request.PagedList`1">
            <summary>
            Represents a paginated list of items and accompanying metadata for API pagination support.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Tournaments.Shared.Request.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            Represents a paginated list of items and accompanying metadata for API pagination support.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="P:Tournaments.Shared.Request.PagedList`1.Items">
            <summary>
            Gets the read-only list of items on the current page.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.PagedList`1.MetaData">
            <summary>
            Gets the pagination metadata including total count, current page, page size, and total pages.
            </summary>
        </member>
        <member name="M:Tournaments.Shared.Request.PagedList`1.CreateAsync(System.Linq.IQueryable{`0},System.Int32,System.Int32)">
            <summary>
            Asynchronously creates a paginated list from the given IQueryable source by applying
            skip/take operations and calculating pagination metadata.
            </summary>
            <param name="source">The IQueryable source of items to paginate.</param>
            <param name="pageNumber">The current page number.</param>
            <param name="pageSize">The number of items per page.</param>
            <returns>A task representing the asynchronous operation, containing the paginated list.</returns>
        </member>
        <member name="P:Tournaments.Shared.Request.RequestParameters.PageSize">
            <summary>
            Set the min and max range for page size.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.RequestParameters.PageNumber">
            <summary>
            Page number.
            </summary>
        </member>
        <member name="P:Tournaments.Shared.Request.TournamentRequestParameters.IncludeGames">
            <summary>
            Include games.
            </summary>
        </member>
    </members>
</doc>
